{
	"info": {
		"_postman_id": "150dca8d-3b57-4606-8f72-ef2890eae556",
		"name": "Express Gateway Admin API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Apps",
			"item": [
				{
					"name": "Create an App",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"abarone\",\r\n  \"name\": \"my-app\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all Apps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "View App info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6e63f944-3d74-41c0-83d9-545bbf4d4207"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update App info",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"my-app-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apps/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6e63f944-3d74-41c0-83d9-545bbf4d4207"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete App",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6e63f944-3d74-41c0-83d9-545bbf4d4207"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate/Deactivate App",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/:id/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								":id",
								"status"
							],
							"variable": [
								{
									"key": "id",
									"value": "6e63f944-3d74-41c0-83d9-545bbf4d4207"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "This part of the API is responsible for managing Apps (Applications) entities. A User is the main API Consumer entity. User can have multiple Apps. Main purpose of App is to be container for Credentials",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create a User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"abarone\",\r\n  \"firstname\": \"Alex\",\r\n  \"lastname\": \"Barone\",\r\n  \"email\": \"alexandre.barone@hitachi-systems-security.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id-or-username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id-or-username"
							],
							"variable": [
								{
									"key": "id-or-username",
									"value": "abarone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "View User Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Update User info",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"abarone\",\r\n  \"firstname\": \"Alexandre\",\r\n  \"lastname\": \"Barone\",\r\n  \"email\": \"alexandre.barone@hitachi-systems-security.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id-or-username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id-or-username"
							],
							"variable": [
								{
									"key": "id-or-username",
									"value": "abarone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id-or-username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id-or-username"
							],
							"variable": [
								{
									"key": "id-or-username",
									"value": "abarone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate/Deactivate User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id-or-username/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id-or-username",
								"status"
							],
							"variable": [
								{
									"key": "id-or-username",
									"value": "abarone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an App",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"description": "A User is a the main consumer entity in Express Gateway. Typically, it would be used to represent a person in Express Gateway. User can have multiple Applications and Credentials.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Create Credential",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credential\": {\r\n    \"scopes\": []\r\n  },\r\n  \"consumerId\": \"abarone\",\r\n  \"type\": \"key-auth\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Credential by Consumer Id (Username, UserId or AppId)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/credentials/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "71faa3c6-9637-43e8-ba84-9aac1a55d715"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Credential info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/credentials/:type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":type",
								":id"
							],
							"variable": [
								{
									"key": "type",
									"value": "key-auth"
								},
								{
									"key": "id",
									"value": "5iFmrv3iMEQZmGzmk8rg3F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate/Deactivate Credential",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials/:type/:id/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":type",
								":id",
								"status"
							],
							"variable": [
								{
									"key": "type",
									"value": "key-auth"
								},
								{
									"key": "id",
									"value": "5iFmrv3iMEQZmGzmk8rg3F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set scopes for Credential",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scopes\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials/:type/:id/scopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":type",
								":id",
								"scopes"
							],
							"variable": [
								{
									"key": "type",
									"value": "key-auth"
								},
								{
									"key": "id",
									"value": "5iFmrv3iMEQZmGzmk8rg3F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add scope to Credential scopes",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scopes\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials/:type/:id/scopes/:scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":type",
								":id",
								"scopes",
								":scope"
							],
							"variable": [
								{
									"key": "type",
									"value": "key-auth"
								},
								{
									"key": "id",
									"value": "5iFmrv3iMEQZmGzmk8rg3F"
								},
								{
									"key": "scope",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove scope from Credential scopes",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scopes\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials/:type/:id/scopes/:scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials",
								":type",
								":id",
								"scopes",
								":scope"
							],
							"variable": [
								{
									"key": "type",
									"value": "key-auth"
								},
								{
									"key": "id",
									"value": "5iFmrv3iMEQZmGzmk8rg3F"
								},
								{
									"key": "scope",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A Credential is a container for authentican\\authorization secrets of API Consumer (User\\App) There are three credential types provided by the Express Gateway authorization policies:\r\n\r\n    basic-auth (password)\r\n    key-auth (key pair id:secret )\r\n    oauth2 (client secret or user password)   OAuth 2.0 policy\r\n\r\nAny API Consumer (Users/Apps) can have only one credential of type basic-auth and oauth2. However, an API Consumer may have multiple key-auth credentials.\r\n\r\nNote:\r\ncredentialId for basic-auth and oauth2 is consumerId and for key-auth it is keyId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2742acbe-d08f-48d1-89a1-2bcda8f24e6f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3b5b91d8-824a-4fdf-80d8-b5f096dab03c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Scopes",
			"item": [
				{
					"name": "Create Scopes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scopes\": [\r\n    \"admin\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Scopes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Scope (Check exists)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scopes/:scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes",
								":scope"
							],
							"variable": [
								{
									"key": "scope",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Scope (Check exists)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scopes/:scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes",
								":scope"
							],
							"variable": [
								{
									"key": "scope",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Express Gateway utilizes scopes for permissions and basic authorization. A scope is a tag you can use to mark API Endpoints and matching Consumer credentials. Scopes can be used within any credential type. Credentials and Scopes Management describes how scopes are declared within credentials\r\n\r\nScopes must be declared within Express Gateway before they are used by credentials or specified on API endpoints.",
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "bfc9b4ae-245c-42e1-bc29-ef2bba1034c3",
			"key": "baseUrl",
			"value": "http://localhost:9876",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}